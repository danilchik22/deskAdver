"""create database

Revision ID: 0ff350b76852
Revises: 
Create Date: 2023-03-18 22:05:20.987657

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0ff350b76852"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "city",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "photo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "type_adv",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("registered_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "advertisement",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("text", sa.TEXT(), nullable=True),
        sa.Column("date", sa.TIMESTAMP(), nullable=True),
        sa.Column("confirm", sa.Integer(), nullable=True),
        sa.Column("time_over", sa.TIMESTAMP(), nullable=True),
        sa.Column("is_actual", sa.Boolean(), nullable=True),
        sa.Column("photo", sa.Integer(), nullable=True),
        sa.Column("user", sa.UUID(), nullable=True),
        sa.Column("category", sa.Integer(), nullable=True),
        sa.Column("type_adv", sa.Integer(), nullable=True),
        sa.Column("city", sa.Integer(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["city"],
            ["city.id"],
        ),
        sa.ForeignKeyConstraint(
            ["photo"],
            ["photo.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_adv"],
            ["type_adv.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "comment",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("id_adv", sa.Integer(), nullable=True),
        sa.Column("id_user", sa.UUID(), nullable=True),
        sa.Column("text", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_adv"],
            ["advertisement.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "complaint",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("id_adv", sa.Integer(), nullable=True),
        sa.Column("id_user", sa.UUID(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("status", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_adv"],
            ["advertisement.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("complaint")
    op.drop_table("comment")
    op.drop_table("advertisement")
    op.drop_table("user")
    op.drop_table("type_adv")
    op.drop_table("photo")
    op.drop_table("city")
    op.drop_table("category")
    # ### end Alembic commands ###
